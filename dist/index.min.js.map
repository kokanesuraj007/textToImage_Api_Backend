{"version":3,"sources":["index.js"],"names":["_express","_interopRequireDefault","require","_mongoose","dotenv","_interopRequireWildcard","_cors","_createImageRoutes","_postRoutes","nodev","process","env","NODE_VERSION","config","app","port","use","express","json","limit","postRouter","createImageRouter","get","req","res","regeneratorRuntime","async","_context","prev","next","send","stop","_context2","set","connect","MONGODB_URI","then","console","log","err","listen","concat","error","startServer"],"mappings":"8PAAA,IAAAA,SAAAC,uBAAAC,QAAA,YACAC,UAAAF,uBAAAC,QAAA,aACAE,OAAAC,wBAAAH,QAAA,WACAI,MAAAL,uBAAAC,QAAA,SAFAK,mBAAAN,uBAAAC,QAAA,kCAMAM,YAAAP,uBAAAC,QAAA,ktBAPA,IAAAO,MAAAC,QAAAC,IAAAC,aAAA,UASAR,OAAOS,SAEP,IAAMC,KAAM,EAAAd,SAAA,WALZe,KAAA,KACAD,IAAAE,KAAA,EAAAV,MAAA,YAQAQ,IAAIE,IAAIC,SAAAA,QAAQC,KAAK,CAAEC,MAAO,UAE9BL,IAAIE,IAAI,eAAgBI,YAAAA,SACxBN,IAAIE,IAAI,sBAAuBK,mBAAAA,SAE/BP,IAAIQ,IAAI,IAAK,SAAOC,EAAKC,GAAZ,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EACXL,EAAIM,KAAK,sBADE,KAAA,EAAA,IAAA,MAAA,OAAAH,EAAAI,YATb,IAAMjB,YAAM,WAAA,OAAAW,mBAAAC,MAAA,SAAAM,GAAA,OAAA,OAAAA,EAAAJ,KAAAI,EAAAH,MAAA,KAAA,EACZ,IAEIb,UAAAA,QAAIiB,IAAA,eAAR,GACIjB,UAAAA,QAAwBkB,QAAExB,QAAAC,IAAAwB,aAA9BC,KAAA,WAAA,OAAAC,QAAAC,IAAA,qCAAItB,MAEI,SAAAuB,GAAA,OAARF,QAAwBjB,IAAAA,KAGpBE,IAAIkB,OAAKzB,KAAA,WAAAsB,QAAAC,IAAA,+CAAAG,OAAA1B,SAAA,MAAA2B,GAAAL,QAAAC,IAAAI,GATD,KAAA,EAAA,IAAA,MAAA,OAAAV,EAAAD,WASCY","file":"index.min.js","sourcesContent":["import express from \"express\";\nimport mongoose from \"mongoose\";\nimport * as dotenv from \"dotenv\";\nimport cors from \"cors\";\nconst nodev = process.env.NODE_VERSION = '18.15.0'\n\nimport createImageRouter from \"./routes/createImageRoutes.js\";\nimport postRouter from \"./routes/postRoutes.js\";\n\ndotenv.config();\n\nconst app = express();\nconst port = 1710;\n\napp.use(cors());\napp.use(express.json({ limit: \"50mb\" }));\n\napp.use(\"/api/v1/post\", postRouter);\napp.use(\"/api/v1/createImage\", createImageRouter);\n\napp.get(\"/\", async (req, res) => {\n  res.send(\"Hello from SERVER!\");\n});\n\nconst startServer = async () => {\n  try {\n    mongoose.set(\"strictQuery\", true);\n    mongoose\n      .connect(process.env.MONGODB_URI)\n      .then(() => console.log(\"MongoDB connected successfully!\"))\n      .catch((err) => console.log(err));\n\n    app.listen(port, () => {\n      console.log(`Server has started on port http://localhost:${port}`);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nstartServer();"]}