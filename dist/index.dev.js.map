{"version":3,"sources":["index.js"],"names":["dotenv","config","app","port","use","express","json","limit","postRouter","createImageRouter","get","req","res","send","startServer","mongoose","set","connect","process","env","MONGODB_URI","then","console","log","err","listen","error"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEAA,MAAM,CAACC,MAAP;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,CAAa;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAb,CAAR;AAEAL,GAAG,CAACE,GAAJ,CAAQ,cAAR,EAAwBI,sBAAxB;AACAN,GAAG,CAACE,GAAJ,CAAQ,qBAAR,EAA+BK,6BAA/B;AAEAP,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AACXA,UAAAA,GAAG,CAACC,IAAJ,CAAS,oBAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClB,cAAI;AACFC,iCAASC,GAAT,CAAa,aAAb,EAA4B,IAA5B;;AACAD,iCACGE,OADH,CACWC,OAAO,CAACC,GAAR,CAAYC,WADvB,EAEGC,IAFH,CAEQ;AAAA,qBAAMC,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAAN;AAAA,aAFR,WAGS,UAACC,GAAD;AAAA,qBAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAT;AAAA,aAHT;;AAKAtB,YAAAA,GAAG,CAACuB,MAAJ,CAAWtB,IAAX,EAAiB,YAAM;AACrBmB,cAAAA,OAAO,CAACC,GAAR,uDAA2DpB,IAA3D;AACD,aAFD;AAGD,WAVD,CAUE,OAAOuB,KAAP,EAAc;AACdJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAgBAZ,WAAW","sourcesContent":["import express from \"express\";\nimport mongoose from \"mongoose\";\nimport * as dotenv from \"dotenv\";\nimport cors from \"cors\";\n\nimport createImageRouter from \"./routes/createImageRoutes.js\";\nimport postRouter from \"./routes/postRoutes.js\";\n\ndotenv.config();\n\nconst app = express();\nconst port = 1710;\n\napp.use(cors());\napp.use(express.json({ limit: \"50mb\" }));\n\napp.use(\"/api/v1/post\", postRouter);\napp.use(\"/api/v1/createImage\", createImageRouter);\n\napp.get(\"/\", async (req, res) => {\n  res.send(\"Hello from SERVER!\");\n});\n\nconst startServer = async () => {\n  try {\n    mongoose.set(\"strictQuery\", true);\n    mongoose\n      .connect(process.env.MONGODB_URI)\n      .then(() => console.log(\"MongoDB connected successfully!\"))\n      .catch((err) => console.log(err));\n\n    app.listen(port, () => {\n      console.log(`Server has started on port http://localhost:${port}`);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nstartServer();\n"],"file":"index.dev.js"}